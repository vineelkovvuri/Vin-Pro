README flex 2.5.1 - Borland 4.02 distribution
----------------------------------------------------------------
enclosed in flex251s.zip (source) and flex251x.zip (executable)
----------------------------------------------------------------

This is the dos distribution of flex 2.5.1 compiled with Borland
4.02.

The .exe that I'm distributing is compiled without debug this time,
and thus it's smaller!

Using "makefile" and "config.h" enclosed source archive (in the
flex251/borland directory) this was a straightforward compile,
requiring no changes to the flex source code.  Those two files are
the only changes to the official unix'ish flex distribution, and
are included in the official distribution.

(I distribute these archives 'cause I'm a nice guy :-)

I have not tested this executable extensively, so caveat emptor.
I did test earlier *beta* versions fairly well, and they passed
with flying colors.

As followup to the notes for my port of version 2.4.7, the c++
testing went without a hitch.  Also, the memory limitations on
flex itself (not the generated scanner) remain.  (This is _still_
dos, y'know what I mean?)

The current archives' contents is roughly equivalent to the
flex247(s,x) archive files. E.G. you get everything that you need,
including a bison'ed parser in parse.c, using the Andrew version of
bison from Carnegie-Mellon University (my preferred version, btw.)

[ plug for bison-a23: it's not encumbered by the FSF copyleft!
  it has good C++ support including a runtime parser class that
  uses tables generated by bison-a23!  once more, it's FREE!
  Thanks Wilfred.Hansen!

  One of these days, I'll get around to posting my dos port,
  but don't hold your breath :-(  I still haven't finished
  working on my integration of the bison-a23 parser class with
  the flexlexer class :-(  The real job comes first, y'know.

  for the source to this bison, get
  ftp://ftp.andrew.cmu.edu/pub/AUIS/bison/bison-A2.3.tar.gz
]

For people with problems:

    Use your debugging skills, or those of someone that you
    work with, before firing off an email to me.  This distribution
    of flex for *DOS* is not missing anything that you need, and
    works for all tests.

    Look to the examples in the Nutshell lex/yacc book for
    help in understanding lex/yacc.

    Use a symbolic debugger, and step through your code.  You
    might find that you're passing a char* instead of a char
    to a function.

    If your generated scanner blows up, DEBUG.  This distribution
    of flex is (gee) still a dos 16-bit application.

(I have received very few "problem reports" that weren't solved
by a tiny amount of good, honest debugging. ;-)

If this debugging fails, you can try sending me mail, but I don't
promise to keep this address forever, nor to followup on your
questions :-)  I try to answer dos/flex related questions, but it's
not my job, and *that* comes first.

With that in mind, happy flexing!




README flex 2.4.7 - Borland 4.02 distribution
----------------------------------------------------------------
enclosed in flex247s.zip (source) and flex247x.zip (executable)
----------------------------------------------------------------

This flex (2.4.7) executable was compiled with, and generates code
that is successfully compiled with Borland C/C++ 4.02

A limitation is that very large scanner input files (that is to say,
a very large number of actions) may cause the flex to terminate while
trying to reallocate a buffer greater than 64 KB of memory.  This
could in fact be worked around by using a far memory allocation
routine at the expense of source code portability.  I chose to remain
ansi-c compatible - the only scanner input that I've seen venture
close to this is the scanner for flex itself.

The enclosed flex.skl is the same as the hard-coded skeleton; it
compiles cleanly with borland as a standalone c file or as a c file
included within 'extern "C" {...}' in a c++ file.  I have not yet
tried out a true c++ generated scanner (with the '-+' option) but
expect to do so soon (*and* expect not to have any problems (thanks
vern)).  But I *will* advise and repost any additional patches that
might prove to be necessary.

Installation for DOS: copy the executable into a directory on your
path. That's it.

The archive file (flex247x.zip) includes

flex.exe	executable
flex.skl	the skeleton that you can modify to suit yourself
flex.1		nroff source for the man page
flexdoc.1	nroff source for the manual
flex.man	the man page formatted
flexdoc.man	the manual formatted
copying		read this
news		release notes
readme		Vern's original readme
readme.bcc	this file
bccdiffs	(unified) context diffs for the distribution sources
makefile	a makefile for BCC 4.02, using Borland's make

The archive file (flex247s.zip) includes

all the above files (except the executable, of course,) and all
files include in the original distribution archive.  Ths sources in
the directory are those that have been patched for compilation with
bcc.  If you want the originals, you probably know where to find 'em
- and I expect that you could recreate them from the diffs :-)

Have fun.

Terry Kane
tkane01@eagle.cc.emory.edu

Bugs lurk in corners and congregate at boundaries.  (Bezier)
