; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

	TITLE	D:\vin-pro\cpp\win32\test.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG81250 DB	'V', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 'e', 00H, 'l', 00H
	DB	00H, 00H
	ORG $+2
$SG81251 DB	' ', 00H, 'K', 00H, 'u', 00H, 'm', 00H, 'a', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+2
$SG81252 DB	'%', 00H, 's', 00H, '\', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG81253 DB	'%', 00H, 's', 00H, 00H, 00H
_DATA	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_wmain
EXTRN	_wprintf:PROC
EXTRN	__imp__wsprintfW:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
; Function compile flags: /Odtp
; File d:\vin-pro\cpp\win32\test.c
_TEXT	SEGMENT
_buff$ = -2056						; size = 2048
__$ArrayPad$ = -4					; size = 4
_wmain	PROC

; 10   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 2056				; 00000808H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 11   : 	wchar_t buff [1024] = L"Vineel";

	mov	eax, DWORD PTR $SG81250
	mov	DWORD PTR _buff$[ebp], eax
	mov	ecx, DWORD PTR $SG81250+4
	mov	DWORD PTR _buff$[ebp+4], ecx
	mov	edx, DWORD PTR $SG81250+8
	mov	DWORD PTR _buff$[ebp+8], edx
	mov	ax, WORD PTR $SG81250+12
	mov	WORD PTR _buff$[ebp+12], ax
	push	2034					; 000007f2H
	push	0
	lea	ecx, DWORD PTR _buff$[ebp+14]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 12   : 
; 13   : 	wsprintf(buff,L"%s\\%s",buff,L" Kumar");

	push	OFFSET $SG81251
	lea	edx, DWORD PTR _buff$[ebp]
	push	edx
	push	OFFSET $SG81252
	lea	eax, DWORD PTR _buff$[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfW
	add	esp, 16					; 00000010H

; 14   :    wprintf(L"%s",buff);	

	lea	ecx, DWORD PTR _buff$[ebp]
	push	ecx
	push	OFFSET $SG81253
	call	_wprintf
	add	esp, 8

; 15   : }

	xor	eax, eax
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_wmain	ENDP
_TEXT	ENDS
END
