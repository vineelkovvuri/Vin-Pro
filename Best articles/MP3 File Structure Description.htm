<HTML>
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1250">
<TITLE>MP3 File Structure Description</TITLE>
</HEAD>

<BODY BACKGROUND="light.gif" TEXT=white LINK="#88CCFF" VLINK="#4488BB" ALINK="#4488BB" BGCOLOR="#001125" BGPROPERTIES=FIXED>

<BR><BR>
<CENTER>
<FONT SIZE="6" COLOR="FF0000"><B>inside</B></font>
<FONT SIZE="9" COLOR="FF0000"><B>&nbsp;<a href="http://www.elektro-1.cz/mp3-prehravace/" title="Kupte si mp3 pøehrávaè na www.elektro1.cz. MP3 pøehrávaèe a pøíslušenství za dobré ceny." id="vyhodit">MP3</a>&nbsp;</B></font>
<FONT SIZE="6" COLOR="FF0000"><B>inside</B></font>
<BR><BR><BR>
<HR SIZE=2 COLOR=WHITE    WIDTH="50%">
<HR SIZE=2 COLOR="AAAAAA" WIDTH="25%">
<HR SIZE=2 COLOR="555555" WIDTH="10%">
<BR><BR><BR>

<FONT FACE="Verdana,geneva,arial" SIZE="4" COLOR=white><B>
<a href="#MP3FileStructure">MP3 file structure</a>&nbsp;&nbsp;&nbsp;&nbsp;
<a href="#CBR">Constant bitrate</a>&nbsp;&nbsp;&nbsp;&nbsp;
<a href="#VBR">Variable bitrate</a>&nbsp;&nbsp;&nbsp;&nbsp;
<a href="#TAG1">TAG v1</a>&nbsp;&nbsp;&nbsp;&nbsp;
<a href="#Tag2">TAG v2</a>&nbsp;&nbsp;&nbsp;&nbsp;
</B></FONT>
</CENTER>

<BR>
<HR SIZE=1 COLOR=WHITE>
<BR><BR>

<FONT FACE="Verdana,geneva,arial" SIZE="2" COLOR=white>

<a name="MP3FileStructure"></a>
<FONT SIZE="5" COLOR=red>
<B><CENTER><a href="http://www.elektro-1.cz/mp3-prehravace/" title="Kupte si mp3 pøehrávaè na www.elektro1.cz. MP3 pøehrávaèe a pøíslušenství za dobré ceny." id="vyhodit">MP3</a> File Structure</CENTER></B>
</FONT><BR>

<BR>
can be expressed in this scheme (TAGs are optional):<BR>
<BR>
<B>[TAG v2] &nbsp;&nbsp;Frame1 &nbsp;&nbsp;Frame2 &nbsp;&nbsp;Frame3... &nbsp;&nbsp;[TAG v1]</B><BR>
<BR>
MP3 file is divided into a small blocks - frames. Each frame has constant time length 0.026 sec.<BR>
But size of one frame (in Bytes) varies according to bitrate. Eg. for 128kbps it is (normally) 417 Bytes
and for 192kbps 626 Bytes.<BR> 
<BR>
The first 4 Bytes of each frame is <B>frame header</B> and the rest is audio data.<BR>
<BR>
Frame header consists of information about frame (bitrate, stereo mode...) and because of that
frames are independent items. Each of them can have its own characteristic. It is used eg. in 
Variable Bitate files, where each frame can have different bitrate.<BR>
<BR>
Frame header has this structure (each letter is one bit):<BR>
<BR>
<FONT SIZE="4"><B>
<a href="#FrameHeaderA">AAAAAAAA</a>&nbsp;&nbsp;
<a href="#FrameHeaderA">AAA</a><a href="#FrameHeaderB">BB</a><a href="#FrameHeaderC">CC</a><a href="#FrameHeaderD">D</a>&nbsp;&nbsp;
<a href="#FrameHeaderE">EEEE</a><a href="#FrameHeaderF">FF</a><a href="#FrameHeaderG">G</a><a href="#FrameHeaderH">H</a>&nbsp;&nbsp;
<a href="#FrameHeaderI">II</a><a href="#FrameHeaderJ">JJ</a><a href="#FrameHeaderK">K</a><a href="#FrameHeaderL">L</a><a href="#FrameHeaderM">MM</a>
</B></FONT>
<BR><BR>

<TABLE style="font-family: Verdana,geneva,arial; font-size: 10pt"> 
 <TR>
  <TD VALIGN=top><FONT SIZE="4">A<a name="#FrameHeaderA"></a></FONT></TD>
  <TD>&nbsp;&nbsp;</TD>
  <TD>
  <B>Frame synchronizer</B><BR>
  All bits are set to 1. It is used for finding the beginning of frame. But these values can occur
  many times in binary file so you should test next values from header for validity (eg. bitrate bits arent 1111,
  sampling rate frequency isnt 11 etc.). But you can never be 100% sure if you find a header.<BR>
  Next method is to find the first header and then go through all frames - almost exact, but time consuming.<BR>
  Be careful with the first frame! It doesnt have to start at the first Byte in file. Either TAG v2 can be
  included or file can contains of some crap at the beginning.<BR>
  Anyway - to find a header is a little problem.
  </TD>
 </TR>

 <TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR>
  <TD VALIGN=top><FONT SIZE="4">B<a name="#FrameHeaderB"></a></FONT></TD>
  <TD>&nbsp;&nbsp;</TD>
  <TD>
  <B>MPEG version ID</B><BR>
	<TABLE  style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
	 <TR><TD>00</TD><TD>&nbsp;&nbsp;</TD><TD>MPEG Version 2.5 (not an official standard)</TD></TR>
	 <TR><TD>01</TD><TD>&nbsp;&nbsp;</TD><TD>reserved</TD></TR>
	 <TR><TD>10</TD><TD>&nbsp;&nbsp;</TD><TD>MPEG Version 2</TD></TR>
	 <TR><TD>11</TD><TD>&nbsp;&nbsp;</TD><TD>MPEG Version 1</TD></TR>
	</TABLE>
	In most MP3 files these value should be 11.
 </TR>

 <TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR>
  <TD VALIGN=top><FONT SIZE="4">C<a name="#FrameHeaderC"></a></FONT></TD>
  <TD>&nbsp;&nbsp;</TD>
  <TD>
  <B>Layer</B><BR>
	<TABLE  style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
	 <TR><TD>00</TD><TD>&nbsp;&nbsp;</TD><TD>reserved</TD></TR>
	 <TR><TD>01</TD><TD>&nbsp;&nbsp;</TD><TD>Layer III</TD></TR>
	 <TR><TD>10</TD><TD>&nbsp;&nbsp;</TD><TD>Layer II</TD></TR>
	 <TR><TD>11</TD><TD>&nbsp;&nbsp;</TD><TD>Layer I</TD></TR>
	</TABLE>
	In most MP3 files these value should be 01 (because MP3 = MPEG 1 Layer 3).
 </TR>

 <TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR>
  <TD VALIGN=top><FONT SIZE="4">D<a name="#FrameHeaderD"></a></FONT></TD>
  <TD>&nbsp;&nbsp;</TD>
  <TD>
  <B>CRC Protection</B><BR>
	<TABLE  style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
	 <TR><TD>0</TD><TD>&nbsp;&nbsp;</TD><TD>Protected by CRC</TD></TR>
	 <TR><TD>1</TD><TD>&nbsp;&nbsp;</TD><TD>Not protected</TD></TR>
	</TABLE>
	 Frames may have some form of check sum - CRC check. CRC is 16 bit long and, if exists,
	 it follows frame header. And then comes audio data.<BR>
	 But almost all MP3 files doesnt contain CRC.
 </TR>

 <TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR>
  <TD VALIGN=top><FONT SIZE="4">E<a name="#FrameHeaderE"></a></FONT></TD>
  <TD>&nbsp;&nbsp;</TD>
  <TD>
  <B>Bitrate index</B><BR>
	<TABLE  style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
	 <TR><TD>0000</TD><TD>&nbsp;&nbsp;</TD><TD>free</TD></TR>
	 <TR><TD>0001</TD><TD>&nbsp;&nbsp;</TD><TD>32</TD></TR>
	 <TR><TD>0010</TD><TD>&nbsp;&nbsp;</TD><TD>40</TD></TR>
	 <TR><TD>0011</TD><TD>&nbsp;&nbsp;</TD><TD>48</TD></TR>
	 <TR><TD>0100</TD><TD>&nbsp;&nbsp;</TD><TD>56</TD></TR>
	 <TR><TD>0101</TD><TD>&nbsp;&nbsp;</TD><TD>64</TD></TR>
	 <TR><TD>0110</TD><TD>&nbsp;&nbsp;</TD><TD>80</TD></TR>
	 <TR><TD>0111</TD><TD>&nbsp;&nbsp;</TD><TD>96</TD></TR>
	 <TR><TD>1000</TD><TD>&nbsp;&nbsp;</TD><TD>112</TD></TR>
	 <TR><TD>1001</TD><TD>&nbsp;&nbsp;</TD><TD>128</TD></TR>
	 <TR><TD>1010</TD><TD>&nbsp;&nbsp;</TD><TD>160</TD></TR>
	 <TR><TD>1011</TD><TD>&nbsp;&nbsp;</TD><TD>192</TD></TR>
	 <TR><TD>1100</TD><TD>&nbsp;&nbsp;</TD><TD>224</TD></TR>
	 <TR><TD>1101</TD><TD>&nbsp;&nbsp;</TD><TD>256</TD></TR>
	 <TR><TD>1110</TD><TD>&nbsp;&nbsp;</TD><TD>320</TD></TR>
	 <TR><TD>1111</TD><TD>&nbsp;&nbsp;</TD><TD>bad</TD></TR>
    </TABLE>
	 All values are in kbps.<BR>
 </TR>

 <TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR>
  <TD VALIGN=top><FONT SIZE="4">F<a name="#FrameHeaderF"></a></FONT></TD>
  <TD>&nbsp;&nbsp;</TD>
  <TD>
  <B>Samplig rate frequency index</B><BR>
	<TABLE  style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
	 <TR><TD>00</TD><TD>&nbsp;&nbsp;</TD><TD>44100</TD></TR>
	 <TR><TD>01</TD><TD>&nbsp;&nbsp;</TD><TD>48000</TD></TR> 	
	 <TR><TD>10</TD><TD>&nbsp;&nbsp;</TD><TD>32000</TD></TR> 	
	 <TR><TD>11</TD><TD>&nbsp;&nbsp;</TD><TD>reserved</TD></TR>
	</TABLE>
     All values are in Hz. In most MP3 files these value should be 00.<BR>
	 Note: Sample frequency 44100 means that one second of audio information is hacked to
	 44100 pieces. And each 1/44100 sec. is audio value taken and encoded into digital form.
 </TR>

 <TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR>
  <TD VALIGN=top><FONT SIZE="4">G<a name="#FrameHeaderG"></a></FONT></TD>
  <TD>&nbsp;&nbsp;</TD>
  <TD>
  <B>Padding</B><BR>
	<TABLE  style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
	 <TR><TD>0</TD><TD>&nbsp;&nbsp;</TD><TD>Frame is not padded</TD></TR>
	 <TR><TD>1</TD><TD>&nbsp;&nbsp;</TD><TD>Frame is padded</TD></TR>
	</TABLE>
	Padding is used to fit the bitrates exactly. If you use frames with length 417 Bytes (for
	128kbps) it doesnt give exact data flow 128kbps. So you can set Padding and add one
	extra Byte at the end of some frames to create exact 128kbps.<BR>
	Fuck it.
 </TR>

 <TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR>
  <TD VALIGN=top><FONT SIZE="4">H<a name="#FrameHeaderH"></a></FONT></TD>
  <TD>&nbsp;&nbsp;</TD>
  <TD>
  <B>Private bit</B><BR>
  It can be freely used for specific needs of an application, eg. it can execute some application
  specific events.<BR>
  No special meaning, forget it.
 </TR>

 <TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR>
  <TD VALIGN=top><FONT SIZE="4">I<a name="#FrameHeaderI"></a></FONT></TD>
  <TD>&nbsp;&nbsp;</TD>
  <TD>
  <B>Channel</B><BR>
	<TABLE  style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
	 <TR><TD VALIGN=top>00</TD><TD>&nbsp;&nbsp;</TD><TD VALIGN=top>Stereo</TD><TD>&nbsp;&nbsp;</TD>
	     <TD>Similar to Dual mono, 2 channels, but bitrate can be different for each one and is coded
		   dynamically. Eg. if channel 1 is silent, the second one will get higher bitrate.</TD></TR>
	 <TR><TD VALIGN=top>01</TD><TD>&nbsp;&nbsp;</TD><TD VALIGN=top>Joint Stereo</TD><TD>&nbsp;&nbsp;</TD>
	     <TD>Mostly used in MP3. One channel is common (mid) and is used mainly for common and lower
	     tones. The second is (side) channel for encoding differences between normal channels.<BR>
	     Note: Stereo effect is listenable properly only for higher tones because for lower ones
		 is length of sound wave so long that you are not able to distinguish phase move.</TD></TR>
	 <TR><TD VALIGN=top>10</TD><TD>&nbsp;&nbsp;</TD><TD VALIGN=top>Dual</TD><TD>&nbsp;&nbsp;</TD>
	     <TD>Also known as Dual mono; 2 separate channels.</TD></TR>
	 <TR><TD VALIGN=top>11</TD><TD>&nbsp;&nbsp;</TD><TD VALIGN=top>Mono (single channel</TD>
	     <TD>&nbsp;&nbsp;</TD><TD VALIGN=top>Normal mono.</TD></TR>
	</TABLE>
 </TR>

 <TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR>
  <TD VALIGN=top><FONT SIZE="4">J<a name="#FrameHeaderJ"></a></FONT></TD>
  <TD>&nbsp;&nbsp;</TD>
  <TD>
  <B>Mode extension</B> (only if Joint Stereo is set)<BR>
	<TABLE style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
	 <TR><TD></TD><TD>&nbsp;&nbsp;</TD><TD>Intensity Stereo</TD><TD>&nbsp;&nbsp;</TD><TD>MS Stereo</TD></TR>
	 <TR><TD>00</TD><TD></TD><TD ALIGN=center>off</TD><TD></TD><TD ALIGN=center>off</TD></TR>
	 <TR><TD>01</TD><TD></TD><TD ALIGN=center>on</TD><TD></TD><TD ALIGN=center>off</TD></TR>
	 <TR><TD>10</TD><TD></TD><TD ALIGN=center>off</TD><TD></TD><TD ALIGN=center>on</TD></TR>
	 <TR><TD>11</TD><TD></TD><TD ALIGN=center>on</TD><TD></TD><TD ALIGN=center>on</TD></TR>
	</TABLE>
	Tells which mode for JointStereo is used.
 </TR>

 <TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR>
  <TD VALIGN=top><FONT SIZE="4">K<a name="#FrameHeaderK"></a></FONT></TD>
  <TD>&nbsp;&nbsp;</TD>
  <TD>
  <B>Copyright</B><BR>
	<TABLE  style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
	 <TR><TD>0</TD><TD>&nbsp;&nbsp;</TD><TD>Audio is not copyrighted</TD></TR>
	 <TR><TD>1</TD><TD>&nbsp;&nbsp;</TD><TD>Audio is copyrighted</TD></TR>
	</TABLE>
    No special use.
 </TR>

 <TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR>
  <TD VALIGN=top><FONT SIZE="4">L<a name="#FrameHeaderL"></a></FONT></TD>
  <TD>&nbsp;&nbsp;</TD>
  <TD>
  <B>Original</B><BR>
	<TABLE style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
	 <TR><TD>0</TD><TD>&nbsp;&nbsp;</TD><TD>Copy of original media</TD></TR>
	 <TR><TD>1</TD><TD>&nbsp;&nbsp;</TD><TD>Original media</TD></TR>
	</TABLE>
    No special use.
 </TR>

 <TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR>
  <TD VALIGN=top><FONT SIZE="4">M<a name="#FrameHeaderM"></a></FONT></TD>
  <TD>&nbsp;&nbsp;</TD>
  <TD>
  <B>Emphasis</B><BR>
	<TABLE style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
	 <TR><TD>00</TD><TD>&nbsp;&nbsp;</TD><TD>None</TD></TR>
	 <TR><TD>01</TD><TD>&nbsp;&nbsp;</TD><TD>50/15</TD></TR>
	 <TR><TD>10</TD><TD>&nbsp;&nbsp;</TD><TD>reserved</TD></TR>
	 <TR><TD>11</TD><TD>&nbsp;&nbsp;</TD><TD>CCIT J.17</TD></TR>
	</TABLE>
	Tells if there are emphasised frequencies above cca. 3.2 kHz.
 </TR>
</TABLE>

<BR>
<HR ALIGN="CENTER" SIZE=1 COLOR=WHITE>
<BR>
<B>Formula for counting frame length in Bytes:</B><BR>
<BR>
FrameLen = int((144 * BitRate / SampleRate ) + Padding);<BR>
<BR>
Eg. for Bitrate = 192kbps, SampleRate = 44.1kHz a Padding = Yes<BR>
FrameLen = int((144 * 192000 / 44100) + 1) = 627 Bytes<BR>
int() means round to bottom. FrameLen includes frame header.<BR>
<BR><BR><BR><BR>


<a name="CBR"></a>
<FONT SIZE="5" COLOR=red>
<B><CENTER>Constant Bitrate (CBR)</CENTER></B>
</FONT><BR>
<BR>
Here is no problema. All frames should be the same (except of audio data).<BR>
But only SHOULD. God damn if they vary in Padding or Emphasis. But I met CBR files
where all frame headers were the same and frame length should be 626 Bytes. But some frames
were 625, 627, 628... So be careful, in MP3 files you cant rely on nothing. 
But in most cases frame length is correct.
<BR><BR><BR><BR>


<a name="VBR"></a>
<FONT SIZE="5" COLOR=red>
<B><CENTER>Variable Bitrate (VBR)</CENTER></B>
</FONT><BR>
<BR>
This system was created to minimize file lengths and to preserve sound quality.<BR>
Higher frequencies generally needs more space for encoding (thats why many codecs cut all frequencies
above cca 16kHz) and lower tones requires less. So if some part of song doesnt consist of higher tones
then using eg. 192kbps is wasting of space. It should be enough to use only eg. 96kbps.<BR>
And it is the principle of VBR. Codec looks over frame and then choose bitrate suitable for its sound quality.<BR>
<BR>
<B>It sounds perfect but it brings some problems:</B><BR>
If you want to jump over 2 minutes in song, it is not a problem with CBR because you are able
simply count amount of Bytes which is necessary to skip. But it is impossible with VBR. Frame lengths
should be arbitrary so you have to either go frame by frame and counts (time consuming and very
unpractical) or use another mechanism for approximate count.<BR>
If you want to cut 5 minutes from the middle of VBR file (all we know CDs where <a href="http://www.zajezdy.cz/last-minute/" title="Katalog Last Minute zájezdy - levná dovolená na poslední chvíli" id="vyhodit">last</a> song takes
10 minutes but 5 minutes is a pure silence, HELL!) problems are the same.<BR>
Result? VBR files are more difficult for controlling and adjusting. And I dont like feeling
that sound quality changes in every moment. And AFAIK many codecs have problems with creation VBR
in good quality.<BR>
Personally I cant see any reason why to use VBR - I dont give a fuck if size of one <a href="http://www.elektro-1.cz/media-cd-dvd/" title="Média pro vypalování všeho druhu - cd, obaly na cd, dvd obaly, cd-r, dvd+r, dvd-r, dvd-rw, dvd-ram, dvd+rw, diskety …" id="vyhodit">CD</a> in MP3 is
55 MB with CBR or 51 MB with VBR. But everybody has a different taste... some people prefer VBR.<BR>
<BR>
<BR>
<FONT SIZE="4"><B>
VBR File Structure<BR>
</B></FONT>
<BR>
is the same as for CBR. But the first frame doesnt contain audio data and it is used for special
information about VBR file.<BR>
<BR>
<BR>
<FONT SIZE="3"><B>
Structure of the first frame:<BR>
</B></FONT>
<BR>
<TABLE  style="font-family: Verdana,geneva,arial; font-size: 10pt"> 
 <TR><TD><B>Byte&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</B></TD><TD>&nbsp;&nbsp;</TD><TD><B>Content</B></TD></TR>
 <TR><TD VALIGN=top>0-3</TD><TD></TD><TD>Standard audio frame header (as descripted above). Mostly it contains values
    FF FB 30 4C, from which you can count FrameLen = 156 Bytes. And thats exactly enough space for storing
    VBR info.<BR>
    This header contains some important information valid for the whole file:<BR>
    - MPEG (MPEG1 or MPEG2)<BR>
    - SAMPLING rate frequency index<BR>
    - CHANNEL (JointStereo etc.)
  </TD></TR>

 <TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR><TD VALIGN=top>4-x</TD><TD></TD><TD>Not used till string "Xing" (58 69 6E 67). This string is used as a main
 VBR file identifier. If it is not found, file is supposed to be CBR. This string can be placed at different
 locations according to values of MPEG and CHANNEL (ya, these from a few lines upwards):</TD></TR>
 <TR><TD VALIGN=top><B>36-39</B></TD><TD></TD><TD><B>"Xing" for MPEG1 and CHANNEL != mono (mostly used)</B></TD></TR>
 <TR><TD VALIGN=top>21-24</TD><TD></TD><TD>"Xing" for MPEG1 and CHANNEL == mono</TD></TR>
 <TR><TD VALIGN=top>21-24</TD><TD></TD><TD>"Xing" for MPEG2 and CHANNEL != mono</TD></TR>
 <TR><TD VALIGN=top>13-16</TD><TD></TD><TD>"Xing" for MPEG2 and CHANNEL == mono</TD></TR>

<TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR><TD></TD><TD></TD><TD>After "Xing" string there are placed flags, number of frames 
 in file and a size of file in Bytes. Each of these items has 4 Bytes and it is stored as
 'int' number in memory. The first is the most significant Byte and the <a href="http://www.zajezdy.cz/last-minute/" title="Katalog Last Minute zájezdy - levná dovolená na poslední chvíli" id="vyhodit">last</a> is the least.<BR> 
<HR ALIGN="CENTER" SIZE=1 COLOR=WHITE>
 <B>Following schema is for MPEG1 and CHANNEL != mono:</B></TD></TR>
 <TR><TD VALIGN=top>40-43</TD><TD></TD><TD><B>Flags</B><BR>
   <TABLE style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
	 <TR><TD>Value</TD><TD>&nbsp;&nbsp;</TD><TD>Name</TD><TD>&nbsp;&nbsp;</TD><TD>Description</TD></TR>
	 <TR><TD>00 00 00 01</TD><TD></TD><TD>Frames Flag</TD><TD></TD><TD>set if value for number of frames in file is stored</TD></TR>
	 <TR><TD>00 00 00 02</TD><TD></TD><TD>Bytes Flag</TD><TD></TD><TD>set if value for filesize in Bytes is stored</TD></TR>
	 <TR><TD>00 00 00 04</TD><TD></TD><TD>TOC Flag</TD><TD></TD><TD>set if values for TOC (see below) are stored</TD></TR>
	 <TR><TD>00 00 00 08</TD><TD></TD><TD>VBR Scale Flag</TD><TD></TD><TD>set if values for VBR scale are stored</TD></TR>
   </TABLE>
   All these values can be stored simultaneously.
 </TD></TR>

<TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR><TD VALIGN=top>44-47</TD><TD></TD><TD><B>Frames</B><BR>
   Number of frames in file (including the first info one)
 </TD></TR>

<TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR><TD VALIGN=top>48-51</TD><TD></TD><TD><B>Bytes</B><BR>
   File length in Bytes
 </TD></TR>

<TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR><TD VALIGN=top>52-151</TD><TD></TD><TD><B>TOC (Table of Contents)</B><BR>
   Contains of 100 indexes (one Byte length) for easier lookup in file. Approximately solves
   problem with moving inside file.<BR>
   Each Byte has a value according this formula:<BR>
   (TOC[i] / 256) * fileLenInBytes<BR>
   So if song lasts eg. 240 sec. and you want to jump to 60. sec. (and file is 5 000 000 Bytes length)
   you can use:<BR>
   TOC[(60/240)*100] = TOC[25]<BR>
   and corresponding Byte in file is then <B>approximately</B> at:<BR>
   (TOC[25]/256) * 5000000<BR>
   <BR>
   If you want to trim VBR file you should also reconstruct Frames, Bytes and TOC properly.
 </TD></TR>

<TR><TD>&nbsp;&nbsp;</TD></TR>

 <TR><TD VALIGN=top>152-155</TD><TD></TD><TD><B>VBR Scale</B><BR>
   I dont know exactly system of storing of this values but this item probably doesnt have deeper meaning.
 </TD></TR>
</TABLE>

<BR><BR>
Complicated? Ya, that is.

<BR><BR><BR><BR>
<a name="Tag1"></a>
<FONT SIZE="5" COLOR=red>
<B><CENTER>TAGs</CENTER></B>
</FONT><BR>
<BR>
TAG is name for data space in MP3 file where some text informations (song name, artist, album...) 
can be stored.

<BR><BR><BR><BR>
<FONT SIZE="5" COLOR=red>
<B><CENTER>TAG ver.1</CENTER></B>
</FONT><BR>
<BR>
is old and simple. It takes <B>always</B> 128 Bytes at the very end of file (after the last 
audio frame).<BR>
<BR><BR>

<FONT SIZE="4"><B>
Structure:<BR>
</B></FONT>

<BR>
<TABLE style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
 <TR><TD>Bytes</TD><TD>&nbsp;&nbsp;</TD><TD>Length</TD><TD>&nbsp;&nbsp;</TD><TD>Content</TD></TR>
 <TR><TD>0-2</TD><TD></TD><TD>3</TD><TD></TD><TD>Tag identifier. Must contain "TAG" string if Tag is valid.</TD></TR>
 <TR><TD>3-32</TD><TD></TD><TD>30</TD><TD></TD><TD>Song Name</TD></TR>
 <TR><TD>33-62</TD><TD></TD><TD>30</TD><TD></TD><TD>Artist</TD></TR>
 <TR><TD>63-92</TD><TD></TD><TD>30</TD><TD></TD><TD>Album</TD></TR>
 <TR><TD>93-96</TD><TD></TD><TD>4</TD><TD></TD><TD>Year</TD></TR>
 <TR><TD>97-126</TD><TD></TD><TD>30</TD><TD></TD><TD>Comment</TD></TR>
 <TR><TD>127</TD><TD></TD><TD>1</TD><TD></TD><TD>Genre</TD></TR>
</TABLE>
<BR>
126. Byte can also be used as the number of song. Items should be padded with NULL (ASCII 0) or with
a space (ASCII 32).<BR>
<BR>
Values for Genre are predefined, you can find them eg. in WinAmp. Only the most important ones:<BR>
<TABLE style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
 <TR><TD>22</TD><TD>&nbsp;&nbsp;</TD><TD>Death Metal</TD></TR>
 <TR><TD>138</TD><TD></TD><TD>Black Metal</TD></TR>
 <TR><TD>144</TD><TD></TD><TD>Thrash Metal</TD></TR>
 <TR><TD>9</TD><TD></TD><TD>Metal</TD></TR>
 <TR><TD>43</TD><TD></TD><TD>Punk</TD></TR>
 <TR><TD>129</TD><TD></TD><TD>Hardcore</TD></TR>
</TABLE>
<BR>
<B>Problems with TAG v1</B> are obvious: you can store only a few items (you have a bad luck for eg. country of
an artist, used codec, author of lyric...) and there is only a limited space for items (you also have
a bad luck if song name has more than 30 chars).<BR>
But despite that is TAG v1 commonly used by most of "MP3 release" groups.

<BR><BR><BR><BR>

<a name="Tag2"></a>
<FONT SIZE="5" COLOR=red>
<B><CENTER>TAG ver.2</CENTER></B>
</FONT><BR>
<BR>
is newer, bigger and uncut. And... much more complicated.<BR>
Is placed at the very beginning of file (before all audio frames).<BR>
<BR><BR>
<FONT SIZE="4"><B>
Structure:<BR>
</B></FONT>
<BR>
TAG v2 contains of header and frames (dont mismatch it with audio frames and their headers!!!).<BR>
<BR><BR>
<FONT SIZE="3"><B>
Header (10 Bytes)<BR>
</B></FONT>
<BR>
<TABLE style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
 <TR><TD>Bytes</TD><TD>&nbsp;&nbsp;</TD><TD>Content</TD></TR>
 <TR><TD>0-2</TD><TD></TD><TD>TAG identifier. It contains of string "ID3"</TD></TR>
 <TR><TD>3-4</TD><TD></TD><TD>TAG version. Can be eg. 03 00</TD></TR>
 <TR><TD>5</TD><TD></TD><TD>Flags</TD></TR>
 <TR><TD>6-9</TD><TD></TD><TD>Size of TAG</TD></TR>
</TABLE>
<BR>
<B>Flags</B> Byte has this structure (in bits):<BR>
abc00000<BR>
where the first 3 bits indicate Unsynchronization, Extended header and Experimental indicator.<BR>
Flags normally dont have special meaning, can be set to 00.<BR>
<BR>
<B>Size of TAG</B> is encoded into 4 Bytes. But not to be so easy, the most significant bit in each
Byte is set to 0 and ignored. Only remaining 7 bits are used. The reason is to avoid mismatch with audio
frame header which has the first synchro Byte FF).<BR>
Eg. TAG len 257 is encoded as 00 00 02 01.<BR>
Size of TAG doesnt contain header itself so total lenght of previous TAG is 257 + 10 Bytes.<BR>
<BR><BR>
<FONT SIZE="3"><B>
Frames<BR>
</B></FONT>
<BR>
Each frame is used for storing one information - eg. Artist or Album.<BR>
Frame consists of header and body.<BR>
<BR>
<FONT SIZE="3"><B>
Header(10 Bytes)<BR>
</B></FONT>
<BR>
<TABLE style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
 <TR><TD>Bytes</TD><TD>&nbsp;&nbsp;</TD><TD>Content</TD></TR>
 <TR><TD>0-3</TD><TD></TD><TD>Frame identifier</TD></TR>
 <TR><TD>4-7</TD><TD></TD><TD>Size</TD></TR>
 <TR><TD>8-9</TD><TD></TD><TD>Flags</TD></TR>
</TABLE>
<BR>
<B>Frame identifier</B> consist of four characters. There are many predefined values you can use.
But eg. current version of WinAmp displays only these ones:<BR>
<BR>
<TABLE style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
 <TR><TD>Iden.</TD><TD>&nbsp;&nbsp;</TD><TD>Description</TD></TR>
 <TR><TD>TRCK</TD><TD></TD><TD>Track number</TD></TR>
 <TR><TD>TENC</TD><TD></TD><TD>Encoded By</TD></TR>
 <TR><TD>WXXX</TD><TD></TD><TD>URL</TD></TR>
 <TR><TD>TCOP</TD><TD></TD><TD>Frame identifier</TD></TR>
 <TR><TD>TOPE</TD><TD></TD><TD>Original Artist</TD></TR>
 <TR><TD>TCOM</TD><TD></TD><TD>Composer</TD></TR>
 <TR><TD>TCON</TD><TD></TD><TD>Genre</TD></TR>
 <TR><TD>COMM</TD><TD></TD><TD>Comments</TD></TR>
 <TR><TD>TYER</TD><TD></TD><TD>Year</TD></TR>
 <TR><TD>TALB</TD><TD></TD><TD>Album</TD></TR>
 <TR><TD>TPE1</TD><TD></TD><TD>Artist</TD></TR>
 <TR><TD>TIT2</TD><TD></TD><TD>Song name</TD></TR>
</TABLE>
<BR>
You can freely define you own frame, eg. with identifier "CUNT" but you cant expect thet some player
will be able to diaplay that. Anyway you can store any information into MP3 file without limits.<BR>
<BR>
<B>Size</B> is stored from the most significant Byte to the least. It doesnt include frame header,
so total length of frame is Size + 10.
Warning: After the header always one Byte with value 00 follows and then begins frame body. Size 
has to include this Byte.<BR>
<BR>
<B>Flags</B> in most cases are set to 00 00. But they have this structure (in bits):<BR>
<BR>
abc00000 ijk00000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//why they are not stored in one Byte???<BR>
<BR>
<TABLE style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
 <TR><TD>Flag</TD><TD>&nbsp;&nbsp;</TD><TD>Description</TD></TR>
 <TR><TD>a</TD><TD></TD><TD>TAG alter preservation</TD></TR>
 <TR><TD>b</TD><TD></TD><TD>File alter preservation</TD></TR>
 <TR><TD>c</TD><TD></TD><TD>Read only</TD></TR>
 <TR><TD>i</TD><TD></TD><TD>Compression</TD></TR>
 <TR><TD>j</TD><TD></TD><TD>Encryption</TD></TR>
 <TR><TD>k</TD><TD></TD><TD>Grouping identity</TD></TR>
</TABLE>
<BR>
Example of frame:<BR>
<TABLE style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
 <TR><TD>54</TD><TD>50</TD><TD>45</TD><TD>31</TD><TD>00</TD><TD>00</TD><TD>00</TD><TD>07</TD><TD>00</TD>
 <TD>00</TD><TD>00</TD><TD>53</TD><TD>53</TD><TD>6C</TD><TD>61</TD><TD>79</TD><TD>65</TD><TD>72</TD></TR>
 <TR><TD>T</TD><TD>P</TD><TD>E</TD><TD>1</TD><TD></TD><TD></TD><TD></TD><TD>7</TD><TD></TD>
 <TD></TD><TD></TD><TD>S</TD><TD>l</TD><TD>a</TD><TD>y</TD><TD>e</TD><TD>r</TD></TR>
</TABLE>
<BR>
To be even more complicated, some frames can have special structure. Eg. COMM (comments) aslo 
contains language version which is not normally displayed:<BR>
<BR>
<TABLE style="font-family: Verdana,geneva,arial; font-size: 10pt; color: #CCCCCC"> 
 <TR><TD>43</TD><TD>4F</TD><TD>4D</TD><TD>4D</TD><TD>00</TD><TD>00</TD><TD>00</TD><TD>0C</TD><TD>00</TD>
 <TD>00</TD><TD>00</TD><TD>65</TD><TD>6E</TD><TD>67</TD><TD>00</TD><TD>63</TD><TD>6F</TD><TD>6D</TD>
 <TD>6D</TD><TD>65</TD><TD>6E</TD><TD>74</TD></TR>
 <TR><TD>C</TD><TD>O</TD><TD>M</TD><TD>M</TD><TD></TD><TD></TD><TD></TD><TD>0C</TD><TD></TD>
 <TD></TD><TD></TD><TD>e</TD><TD>n</TD><TD>g</TD><TD></TD><TD>c</TD><TD>o</TD><TD>m</TD>
 <TD>m</TD><TD>e</TD><TD>n</TD><TD>t</TD></TR>
</TABLE>
<BR>
For TCON (genre or style) you can use predefined values as in TAG v1. Then
frame body looks like "(144)Thrash Metal" and the number corresponds with TAG v1. Or you can simply
write your own style and then body is "Brutal Black" and is stored like normal frame body.<BR>
<BR>
Complete description of TAG v2 you can find <a href="http://id3.org/id3v2.3.0.txt">here</a>.


<BR><BR><BR>
 <B><CENTER><a href="default.htm">Home</a></CENTER></B>

</FONT>

<style type="text/css"> .etarget {border:1px solid silver; padding:2px; color: black; font-size: 10px; text-align: left; font-family: arial, verdana; } .etarget A { color: red; margin:0; padding:0; !important;} .etarget BR { font-size:1px;} .etarget .selfpromo { margin: 0; padding-bottom: 2px; border-bottom:1px solid #dedede; font-size: 12px; width:100%; padding-right:30px} .etarget td.right { text-align:right; font-size:xx-small;  !important;} .etarget .title {font-size: 14px; margin:0; padding:0; border:0px solid red; } .etarget .description {margin:0; padding:0; border:0px solid green;} </style><div id="etdiv"><script>document.write ('<'+'script src="http://search.etargetnet.com/generic/context_ad/context_ad.php?c=2&ref=267&q=' + escape(document.location) + '"></'+'script>');</script></div><script src="http://tady.cz/e/js/etfixed.js"></script><div style="font-size:8pt; color: red; font-family: arial;margin-top:50px; text-align:center"><b> * <a href="http://www.kurzy.cz/" Title="Kurzy mìn, kurzy akcií">Kurzy</a> * <a href="http://www.zajezdy.cz/last-minute/" Title="Dovolená a Zájezdy - Last moment, poznávací, pobytové, na poslední chvíli">Last minute Zájezdy</a> * <a href="http://www.letenky1.cz/" Title="Levné letenky online. Prodej letenek Praha - kamkoliv (Londýn, Brno, letenky do USA, ...)">Letenky</a> * <a href="http://www.kurzy.cz/" Title="Kurzy mìn, koruna, kurzy akcií burza, zákony">Kurzy akcie a burza</a> * <a href="http://www.bydlet.cz/nemovitosti/" Title="Reality, nemovitosti a bydlení, prodej a koupì, domy a byty Praha, Brno">Reality a bydlení</a> * <a href="http://www.akcie-2000.cz/" Title="Akcie - Kurzy akcií, Burza Praha a RM-Systém Praha">Akcie</a> * <a href="http://www.kurzy.cz/rejstrik-firem/" Title="Firmy, registrace DPH, telefonní seznam, názory a zkušenosti">Firmy</a> * </b></div></BODY>
</HTML>
